<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <context:property-placeholder location="classpath*:mongo-config.properties"/>

    <!-- Default bean name is 'mongo' -->
    <!--<mongo:mongo host="${mongo.host}" port="${mongo.port}"/>-->

    <!--<mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}">
        <mongo:options connections-per-host="${mongo.connectionsPerHost}"
                       threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                       connect-timeout="${mongo.connectTimeout}"
                       max-wait-time="${mongo.maxWaitTime}"
                       auto-connect-retry="${mongo.autoConnectRetry}"
                       socket-keep-alive="${mongo.socketKeepAlive}"
                       socket-timeout="${mongo.socketTimeout}"
                       slave-ok="${mongo.slaveOk}"
                       write-number="1"
                       write-timeout="0" write-fsync="true"/>
    </mongo:mongo>-->

    <!-- Offers convenience methods and automatic mapping between MongoDB JSON documents and your domain classes. -->
    <!--<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="test"/>
    </bean>-->
    <!--
        &lt;!&ndash; mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 &ndash;&gt;
        <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
            <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
            <constructor-arg name="mongoConverter" ref="mappingMongoConverter" />
        </bean>

        &lt;!&ndash; 用户验证 &ndash;&gt;
        <bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">
            <constructor-arg name="username" value="${mongo.username}" />
            <constructor-arg name="password" value="${mongo.password}" />
        </bean>


        &lt;!&ndash; mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 &ndash;&gt;
        <bean id="mongoDbFactory"
              class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
            <constructor-arg ref="mongo" />
            <constructor-arg value="${mongo.dbname}" />
            <constructor-arg ref="userCredentials" />
        </bean>

        <bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />

        <bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
            <constructor-arg name="typeKey">
                <null />
            </constructor-arg>
        </bean>

        &lt;!&ndash; collection的映射 &ndash;&gt;
        <bean id="mappingMongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
            <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
            <constructor-arg name="mappingContext" ref="mappingContext" />
            <property name="typeMapper" ref="defaultMongoTypeMapper" />
        </bean>-->





    <!-- write concern(write-number):: NONE: -1, NORMAL: 0, SAFE: 1 (default),  FSYNC_SAFE: 2, REPLICAS_SAFE: 3, JOURNAL_SAFE: 4, MAJORITY: 5 -->
    <mongo:mongo-client id="mongo-client-prod-comet-trans" host="${mongo.host}" port="${mongo.port}"
                        credentials="${mongo.username}:${mongo.password}@${mongo.dbname}">
        <mongo:client-options connections-per-host="${mongo.connectionsPerHost}"
                              threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                              connect-timeout="${mongo.connectTimeout}"
                              socket-timeout="${mongo.socketTimeout}" />
    </mongo:mongo-client>
    <!-- MongoDB Factory for prod-comet-trans : SimpleMongoDbFactory(com.mongodb.MongoClient mongoClient, String databaseName) -->
    <mongo:db-factory id="mongo-factory-prod-comet-trans" mongo-ref="mongo-client-prod-comet-trans" dbname="${mongo.dbname}" />
    <bean id="mongoEventsTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongo-factory-prod-comet-trans" />
    </bean>
    <!--<bean id="mongoEventsDao" class="com.rakuten.marketing.test.tools.prod.comet.trans.dao.MongoEventsDao">
        <property name="mongoEventsTemplate" ref="mongoEventsTemplate" />
    </bean>-->
    <!-- Use this post processor to translate any MongoExceptions thrown in
     @Repository annotated classes -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>